name: Build and deploy WASM

on:
  workflow_call:

env:
  target: "wasm32-unknown-unknown"

jobs:
  build_wasm:
    name: Build and deploy WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ env.target }}
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ env.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ env.target }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ./apex-client/www/node_modules
          key: ${{ runner.os }}-npm-${{ env.target }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ env.target }}
      - name: Install WASM
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build WASM
        working-directory: ./apex-client
        run: wasm-pack build --release
      - name: Build npm
        working-directory: ./apex-client/www/
        run: npm install && npm run build
      - name: Deploy WASM
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apex-client/www/dist
